{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","todoUser","usersFromServer","find","classNames","TodoList","todos","map","App","useState","todosFromServer","SetTodos","newTitle","setNewTitle","selectedUserId","setSelectedUserId","titleError","setTitleError","selectedUserError","setSelectedUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","el","prevTodos","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c9bcc64.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const todoUser = usersFromServer.find(user => user.id === todo.userId)\n    || null;\n\n  return (\n    <article\n      data-id={todo.id}\n      key={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todoUser && (<UserInfo user={todoUser} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      )))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todos, SetTodos] = useState(todosFromServer);\n\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  const [titleError, setTitleError] = useState(false);\n  const [selectedUserError, setSelectedUserError] = useState(false);\n\n  const handelTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(!event.target.value.trim());\n    setNewTitle(event.target.value);\n  };\n\n  const handleSelectUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserError(false);\n    setSelectedUserId(+event.target.value);\n  };\n\n  const reset = () => {\n    setNewTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handelSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!newTitle.trim());\n    setSelectedUserError(!selectedUserId);\n\n    if (!newTitle.trim() || !selectedUserId) {\n      return;\n    }\n\n    const newTodoId = Math.max(...todos.map((el) => el.id + 1));\n\n    const newTodo = {\n      id: newTodoId,\n      title: newTitle,\n      completed: false,\n      userId: selectedUserId,\n    };\n\n    SetTodos((prevTodos => [...prevTodos, newTodo]));\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handelSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTitle}\n            onChange={handelTitle}\n          />\n          {titleError && !newTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={selectedUserId}\n            onChange={handleSelectUserId}\n          >\n            <option value=\"\">Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {selectedUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}